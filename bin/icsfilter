#!/usr/bin/env ruby

require_relative '../lib/trollop'
require_relative '../lib/icsfilter'

opts = Trollop::options do
  opt :remove, "A regular expression pattern that should trigger event removal. Can be passed multiple times to remove events with different patterns", short: 'r', type: :string, multi: true
  opt :filter, "A regular expression pattern that should be filtered from the event summary. Can be passed multiple times to filter different patterns", short: 'f', type: :string, multi: true
end

icsfilter = IcsFilter.new(ARGV[0], ARGV[1])

if opts.filter_given
  targets = Regexp.union(opts.filter.map! { |regex| Regexp.new regex })

  icsfilter.filter(targets)
end

if opts.remove_given
  targets = Regexp.union(opts.remove.map! { |regex| Regexp.new regex })

  icsfilter.remove(targets)
end

icsfilter.publish
